<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inz.about.dao.FileInfoMapper">
    <resultMap id="BaseResultMap" type="com.inz.about.model.FileInfo">
        <id column="file_id" jdbcType="VARCHAR" property="fileId"/>
        <result column="file_name" jdbcType="VARCHAR" property="fileName"/>
        <result column="file_path" jdbcType="VARCHAR" property="filePath"/>
        <result column="file_url" jdbcType="VARCHAR" property="fileUrl"/>
        <result column="file_extension" jdbcType="VARCHAR" property="fileExtension"/>
        <result column="file_type" jdbcType="VARCHAR" property="fileType"/>
        <result column="file_size" jdbcType="DECIMAL" property="fileSize"/>
        <result column="file_enable" jdbcType="VARCHAR" property="fileEnable"/>
        <result column="create_datetime" jdbcType="TIMESTAMP" property="createDatetime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    file_id, file_name, file_path, file_url, file_extension, file_type, file_size, file_enable, 
    create_datetime, update_time
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from file_info
        where file_id = #{fileId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from file_info
    where file_id = #{fileId,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.inz.about.model.FileInfo">
    insert into file_info (file_id, file_name, file_path, 
      file_url, file_extension, file_type, 
      file_size, file_enable, create_datetime, 
      update_time)
    values (#{fileId,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, #{filePath,jdbcType=VARCHAR}, 
      #{fileUrl,jdbcType=VARCHAR}, #{fileExtension,jdbcType=VARCHAR}, #{fileType,jdbcType=VARCHAR}, 
      #{fileSize,jdbcType=DECIMAL}, #{fileEnable,jdbcType=VARCHAR}, #{createDatetime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.inz.about.model.FileInfo">
        insert into file_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="fileId != null">
                file_id,
            </if>
            <if test="fileName != null">
                file_name,
            </if>
            <if test="filePath != null">
                file_path,
            </if>
            <if test="fileUrl != null">
                file_url,
            </if>
            <if test="fileExtension != null">
                file_extension,
            </if>
            <if test="fileType != null">
                file_type,
            </if>
            <if test="fileSize != null">
                file_size,
            </if>
            <if test="fileEnable != null">
                file_enable,
            </if>
            <if test="createDatetime != null">
                create_datetime,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="fileId != null">
                #{fileId,jdbcType=VARCHAR},
            </if>
            <if test="fileName != null">
                #{fileName,jdbcType=VARCHAR},
            </if>
            <if test="filePath != null">
                #{filePath,jdbcType=VARCHAR},
            </if>
            <if test="fileUrl != null">
                #{fileUrl,jdbcType=VARCHAR},
            </if>
            <if test="fileExtension != null">
                #{fileExtension,jdbcType=VARCHAR},
            </if>
            <if test="fileType != null">
                #{fileType,jdbcType=VARCHAR},
            </if>
            <if test="fileSize != null">
                #{fileSize,jdbcType=DECIMAL},
            </if>
            <if test="fileEnable != null">
                #{fileEnable,jdbcType=VARCHAR},
            </if>
            <if test="createDatetime != null">
                #{createDatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.inz.about.model.FileInfo">
        update file_info
        <set>
            <if test="fileName != null">
                file_name = #{fileName,jdbcType=VARCHAR},
            </if>
            <if test="filePath != null">
                file_path = #{filePath,jdbcType=VARCHAR},
            </if>
            <if test="fileUrl != null">
                file_url = #{fileUrl,jdbcType=VARCHAR},
            </if>
            <if test="fileExtension != null">
                file_extension = #{fileExtension,jdbcType=VARCHAR},
            </if>
            <if test="fileType != null">
                file_type = #{fileType,jdbcType=VARCHAR},
            </if>
            <if test="fileSize != null">
                file_size = #{fileSize,jdbcType=DECIMAL},
            </if>
            <if test="fileEnable != null">
                file_enable = #{fileEnable,jdbcType=VARCHAR},
            </if>
            <if test="createDatetime != null">
                create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where file_id = #{fileId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.inz.about.model.FileInfo">
    update file_info
    set file_name = #{fileName,jdbcType=VARCHAR},
      file_path = #{filePath,jdbcType=VARCHAR},
      file_url = #{fileUrl,jdbcType=VARCHAR},
      file_extension = #{fileExtension,jdbcType=VARCHAR},
      file_type = #{fileType,jdbcType=VARCHAR},
      file_size = #{fileSize,jdbcType=DECIMAL},
      file_enable = #{fileEnable,jdbcType=VARCHAR},
      create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where file_id = #{fileId,jdbcType=VARCHAR}
  </update>
    <!-- 通过文件类型查询 -->
    <select id="findByFileType" parameterType="java.lang.String" resultType="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM file_info
        WHERE file_type = #{fileType, jdbcType=VARCHAR}
        ORDER BY file_size ASC
        LIMIT #{start}, #{pageSize}
    </select>
</mapper>